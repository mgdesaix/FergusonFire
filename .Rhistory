install.packages("rmapshaper")
object.size(sh.df.full)
library(ggplot2)
library(rgdal)
files <- list.files(path = "./Ferguson/", pattern = "\\.shp$")
files
sh.df.full <- data.frame()
for(i in 1:length(files)){
file.tmp <- substr(files[i], 1, (nchar(files[i])-4) )
sh.tmp <- readOGR(dsn = "./Ferguson/", layer = file.tmp)
sh.tmp$id <- i
sh.df.tmp <- fortify(sh.tmp, region = "id")
sh.df.tmp$date <- sh.tmp$perDatTime
sh.df.full <- rbind(sh.df.full, sh.df.tmp)
}
object.size(sh.df.full)
library(rmapshaper)
?rmapshaper
class(sh.df.full)
sh.tmp
object.size(sh.tmp)
test <- ms_simplify(sh.tmp)
object.size(test)
sh.list <- list()
for(i in 1:length(files)){
file.tmp <- substr(files[i], 1, (nchar(files[i])-4) )
sh.tmp <- readOGR(dsn = "./Ferguson/", layer = file.tmp)
sh.tmp$id <- i
sh.df.tmp <- fortify(sh.tmp, region = "id")
sh.df.tmp$date <- sh.tmp$perDatTime
sh.df.full <- rbind(sh.df.full, sh.df.tmp)
sh.list[i] <- sh.df.tmp
}
warnings()
sh.list <- list()
for(i in 1:length(files)){
file.tmp <- substr(files[i], 1, (nchar(files[i])-4) )
sh.tmp <- readOGR(dsn = "./Ferguson/", layer = file.tmp)
sh.tmp$id <- i
sh.df.tmp <- fortify(sh.tmp, region = "id")
sh.df.tmp$date <- sh.tmp$perDatTime
sh.df.full <- rbind(sh.df.full, sh.df.tmp)
sh.list[[i]] <- sh.df.tmp
}
names(sh.tmp)
sh.list[[1]]
class(sh.list[[1]])
sh.df.full <- data.frame()
sh.list <- list()
for(i in 1:length(files)){
file.tmp <- substr(files[i], 1, (nchar(files[i])-4) )
sh.tmp <- readOGR(dsn = "./Ferguson/", layer = file.tmp)
sh.tmp$id <- i
sh.df.tmp <- fortify(sh.tmp, region = "id")
sh.df.tmp$date <- sh.tmp$perDatTime
sh.df.full <- rbind(sh.df.full, sh.df.tmp)
sh.list[[i]] <- sh.tmp
}
names(sh.tmp)
length(names(sh.tmp))
for( i in 1:length(sh.list)){
print(length(names(sh.list[[i]])))
}
joined <- SpatialPolygons(lapply(sh.list, function(x){x@polygons[[1]]}))
length(sh.list)
class(sh.list)
class(sh.list[[1]])
joined <- SpatialPolygonsDataFrame(lapply(sh.list, function(x){x@polygons[[1]]}))
sh.tmp
sh.tmp$irwinid
names(sh.tmp)
test <- do.call(bind, sh.list)
library(raster)
test <- do.call(bind, sh.list)
test
files <- list.files(path = "./Ferguson/", pattern = "\\.shp$")
sh.df.full <- data.frame()
sh.list <- list()
for(i in 1:length(files)){
file.tmp <- substr(files[i], 1, (nchar(files[i])-4) )
sh.tmp <- readOGR(dsn = "./Ferguson/", layer = file.tmp)
sh.tmp$id <- i
sh.df.tmp <- fortify(sh.tmp, region = "id")
sh.df.tmp$date <- sh.tmp$perDatTime
sh.df.full <- rbind(sh.df.full, sh.df.tmp)
sh.list[[i]] <- sh.tmp
}
joined <- do.call(bind, sh.list)
object.size(joined)
simplified <- ms_simplify(joined)
object.size(simplified)
library(magrittr)
unique(simplified$id)
test <- subset(simplified, simplified$id == 1)
leaflet( test ) %>%
addPolygons
library(leaflet)
library(raster)
library(ggplot2)
library(rgdal)
library(rmapshaper)
library(magrittr)
leaflet( test ) %>%
addPolygons()
leaflet( simplified ) %>%
addPolygons()
leaflet( simplified ) %>%
addPolygons(fillColor = ~id)
?fillColor
?addPolygons
length(sh.list)
simplified@polygons[[1]]
for(i in 1:length(files)){
file.tmp <- substr(files[i], 1, (nchar(files[i])-4) )
sh.tmp <- readOGR(dsn = "./Ferguson/", layer = file.tmp)
sh.tmp$id <- i
sh.list[[i]] <- sh.tmp
}
joined.sh <- do.call(bind, sh.list)
simplified.sh <- ms_simplify(joined)
min(simplified.sh$perDatTime)
simplified$perDatTime[1]
simplified.sh[[1]]
length(simplified.sh)
leaflet( simplified[[1]] ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified[1] ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified[simplified == 1] ) %>%
addPolygons(fillColor = ~id)
attributes(simplified)
leaflet( simplified[[1]] ) %>%
addPolygons(fillColor = ~id)
simplified@polygons[1]
leaflet( simplified@polygons[1] ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified@polygons[[1]] ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified[1,] ) %>%
addPolygons(fillColor = ~id)
shiny::runApp()
runApp()
sh.list[1,]
simplified[1,]
runApp()
files <- list.files(path = "./Ferguson/", pattern = "\\.shp$")
files
sh.df.full <- data.frame()
sh.list <- list()
for(i in 1:length(files)){
file.tmp <- substr(files[i], 1, (nchar(files[i])-4) )
sh.tmp <- readOGR(dsn = "./Ferguson/", layer = file.tmp)
sh.tmp$id <- i
sh.list[[i]] <- sh.tmp
}
joined.sh <- do.call(bind, sh.list)
simplified.sh <- ms_simplify(joined.sh)
saveRDS(simplified.sh, "simplified.sh.RDS")
runApp()
runApp()
leaflet(simplified.sh) %>%
addTiles()
leaflet( simplified.sh[1,] ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified.sh )
leaflet( simplified.sh[1,] ) %>%
addPolygons(fillColor = ~id)
leaflet( simplified.sh ) %>%
addTiles()
?leaflet
leaflet( simplified.sh ) %>%
addTiles()
leaflet( simplified.sh[16,] ) %>%
addTiles()
leaflet( simplified.sh[16,] ) %>%
addTiles()
simplified.sh@polygons
simplified.sh@polygons$coords
simplified.sh@polygons@coords
coordinates(simplfied.sh)
coordinates(simplified.sh)
leaflet( coordinates(simplfied.sh) ) %>%
addTiles()
leaflet( coordinates(simplified.sh) ) %>%
addTiles()
colnames(latlong) <- c("latitude", "longitude")
latlong <- coordinates(simplified.sh)
colnames(latlong) <- c("latitude", "longitude")
leaflet( latlong ) %>%
addTiles()
leaflet(simplified.sh) %>%
addTiles() %>%
addPolygons()
runApp()
runApp()
runApp()
runApp()
?addPolygons
runApp()
files <- list.files(path = "./Ferguson/", pattern = "\\.shp$")
files
sh.df.full <- data.frame()
sh.list <- list()
i <- 1
file.tmp <- substr(files[i], 1, (nchar(files[i])-4) )
sh.tmp <- readOGR(dsn = "./Ferguson/", layer = file.tmp)
sh.tmp
sh.tmp$perDatTime
as.Date(sh.tmp$perDatTime)
as.Date(as.factor(sh.tmp$perDatTime))
?as.Date
as.Date(sh.tmp$perDatTime, "%m/$d/$y")
as.Date(as.factor(sh.tmp$perDatTime), "%m/%d/%y")
as.Date(as.character(sh.tmp$perDatTime), "%m/%d/%y")
simplified.sh$perDatTime
as.Date(as.character(simplified.sh$perDatTime), "%m/%d/%y")
as.Date(as.character(simplified.sh$perDatTime), "%m/%d/%y-2")
as.Date(as.character(simplified.sh$perDatTime), "%m/%d/%y")
as.Date(as.character(simplified.sh$perDatTime), "%m/%d/%y") + 2
as.Date(as.character(simplified.sh$perDatTime), "%m/%d/%y")
# saveRDS(simplified.sh, "simplified.sh.RDS")
simp.reduced.sh <- simplified.sh[c(1,2,5,9,10,13,16),]
simp.reduced.sh$perDatTime
as.Date.numeric(as.factor(simp.reduced.sh$perDatTime), "%m/%d/%y")
as.Date(as.factor(simp.reduced.sh$perDatTime), "%m/%d/%y")
as.numeric(format(simp.reduced.sh$perDatTime, "%Y"))
thedate<- as.Date(as.factor(simp.reduced.sh$perDatTime), "%m/%d/%y")
as.numeric(format(thedate, "%d"))
as.numeric(format(thedate, "%m"))
class(thedate)
date.char <- as.character(simp.reduced.sh$perDatTime), "%m/%d/%y")
date.char <- as.character(simp.reduced.sh$perDatTime)
monday <- substr(date.char, 1, 4)
monday
as.character(simp.reduced.sh$perDatTime) %>%
substr(1,4) %>%
as.Date("%m/%d")
date <- as.character(simp.reduced.sh$perDatTime) %>%
substr(1,4) %>%
as.Date("%m/%d")
date
class(date)
min(date)
max(date)
reduced.sh <- simplified.sh[c(1,2,5,9,10,13,16),]
reduced.sh$perDatTime
date <- as.character(reduced.sh$perDatTime) %>%
substr(1,4) %>%
as.Date("%m/%d")
date
class(date)
reduced.sh$date <- date
saveRDS(reduced.sh, "reduced.sh.RDS")
reduced.sh <- readRDS("reduced.sh.RDS")
min(reduced.sh$date)
runApp()
as.factor(reduced.sh$date)
as.numeric(reduced.sh$date)
as.numeric(as.factor(reduced.sh$date))
as.factor(reduced.sh$date)[1]
as.factor(reduced.sh$date)[3]
test <- as.factor(reduced.sh$date)[3]
test
as.numeric(as.factor(test))
runApp()
runApp()
runApp()
class(reduced.sh$date)
reduced.sh$date
min(reduced.sh$date)
reduced.sh$date <- as.factor(reduced.sh$date)
reduced.sh$dagte
reduced.sh$date
runApp()
min(reduced.sh$date)
reduced.sh <- readRDS("reduced.sh.RDS")
reduced.sh$id
length(reduced.sh)
reduced.sh$id <- c(1:length(reduced.sh))
reduced.sh[reduced.sh$date == "2018-07-15"]
reduced.sh[reduced.sh$date == "2018-07-15"]$id
tmp <- reduced.sh[reduced.sh$date == "2018-07-15"]
tmp <- reduced.sh[reduced.sh$date == "2018-07-15",]
tmp$id
reduced.sh[reduced.sh$date == "2018-07-15",]$id
runApp()
runApp()
fire.table <- read.csv("FergusonFire.csv", col.names = T)
fire.table <- read.csv("FergusonFire.csv", col.names = 1)
fire.table <- read.csv("FergusonFire.csv")
fire.table
ggplot(fire.table) +
geom_point(aes(x = Date, y = Acres))
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres)) +
theme_bw
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres))
ggplot(fire.table) +
geom_point(aes(x = Date, y = Acres))
ggplot(fire.table) +
geom_point(aes(x = Date, y = Acres)) +
theme_bw
ggplot(fire.table) +
geom_point(aes(x = Date, y = Acres)) +
theme_bw()
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres)) +
theme_bw()
ggplot(fire.table) +
geom_smooth(aes(x = Date, y = Acres)) +
theme_bw()
ggplot(fire.table) +
geom_point(aes(x = Date, y = Acres)) +
theme_bw()
?geom_point
?geom_line
ggplot(fire.table) +
geom_point(aes(x = Date, y = Acres, group = Date)) +
theme_bw()
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = Date)) +
theme_bw()
fire.table
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1)) +
theme_bw()
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red")) +
theme_bw()
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red")) +
geom_line(aes(x = Date, y = Personnel, groupe = 2, color = "blue"))
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red")) +
geom_line(aes(x = Date, y = Personnel, group = 2, color = "blue"))
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red")) +
theme_bw()
?geom_line
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red", size = 2)) +
theme_bw()
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red", size = 1)) +
theme_bw()
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red", size = .3)) +
theme_bw()
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red")) +
theme_bw()
ggplot(fire.table) +
geom_line(aes(x = Date, y = Acres, group = 1, color = "red")) +
guides(color = F) +
theme_bw()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?br()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::deployApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
rsconnect::deployApp()
